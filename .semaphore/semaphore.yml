version: v1.0
name: ready-up
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

blocks:
  - name: "Install dependencies"
    task:
      prologue:
        commands:
          - sem-version node 10
      jobs:
        - name: "lerna bootstrap and cache"
          commands:
            - checkout
            - npm ci
            - cache store node-modules-$(checksum package-lock.json) node_modules
            - for dir in $(ls packages); do (cd packages/$dir; cache restore node-modules-$(checksum package-lock.json)); done;
            - npx lerna bootstrap
            - for dir in $(ls packages); do (cd packages/$dir; cache store node-modules-$(checksum package-lock.json) node_modules); done;
            - cache store ready-up-web-dist-$SEMAPHORE_GIT_SHA packages/ready-up-web/dist

  - name: "Build and Test"
    task:
      prologue:
        commands:
          - sem-service start postgres
          - sem-version node 10
      jobs:
        - name: "API Load Tests"
          commands:
            - checkout
            - cache restore node-modules-$(checksum package-lock.json)
            - for dir in $(ls packages); do (cd packages/$dir; cache restore node-modules-$(checksum package-lock.json)); done;
            - cache restore ready-up-web-dist-$SEMAPHORE_GIT_SHA

            - createdb -U postgres -h 0.0.0.0 ready-up
            - (cd packages/ready-up-pg-connector; npx knex migrate:latest)

            - npx pm2 start ecosystem.config.js

            - npx pm2 show ready-up-api > /dev/null
            - (cd packages/ready-up-api; npm run test)
          env_vars:
            - name: TEST_URL
              value: "http://0.0.0.0:3000"
        - name: "Web E2E Tests"
          commands:
            - checkout
            - cache restore node-modules-$(checksum package-lock.json)
            - for dir in $(ls packages); do (cd packages/$dir; cache restore node-modules-$(checksum package-lock.json)); done;
            - cache restore ready-up-web-dist-$SEMAPHORE_GIT_SHA

            - createdb -U postgres -h 0.0.0.0 ready-up
            - (cd packages/ready-up-pg-connector; npx knex migrate:latest)

            - npx pm2 start ecosystem.config.js

            - npx pm2 show ready-up-web > /dev/null
            - (cd packages/ready-up-web; npm run test:e2e -- --url $TEST_URL)
          env_vars:
            - name: TEST_URL
              value: "http://0.0.0.0:8000"
      env_vars:
        - name: READY_UP_MAX_SESSION_MS
          value: "600000"
        - name: READY_UP_SESSION_SECRET_KEY_PATH
          value: "/home/runner/tmp/ready-up-session-secret-key"
        - name: READY_UP_PG_CONNECTION_STRING
          value: "postgresql://postgres@localhost/ready-up"
        - name: READY_UP_LISTEN_PORT
          value: "3000"
        - name: READY_UP_LISTEN_ADDRESS
          value: "localhost"
      secrets:
        - name: ready-up-secret
        - name: ready-up-firebase
        - name: ready-up-fcm
